import{_ as e,c as t,o as s,d as o}from"./app.6a0ee18c.js";const u='{"title":"Typescript","description":"","frontmatter":{},"relativePath":"guide/typescript.md","lastUpdated":1638737564621}',a={},p=o('<h1 id="typescript" tabindex="-1">Typescript <a class="header-anchor" href="#typescript" aria-hidden="true">#</a></h1><p>Google Maps does come with its own type definitions: <a href="https://www.npmjs.com/package/@types/google.maps" target="_blank" rel="noopener noreferrer">@types/google.maps</a></p><p>These were used to make <code>v3-gmaps</code> but weren&#39;t used as the exported types because of some unnecessary overhead in creating acceptable objects to be consumed in things like props.</p><p>Instead, <code>v3-gmaps</code> comes with its own, simpler and more Vue component friendly types. The added bonus is I included the definitions in the package so you don&#39;t need another package to use them.</p><p>For now, this would be the best way to browse the types is by checking out <a href="https://github.com/xon52/v3-gmaps/blob/main/src/types/types.ts" target="_blank" rel="noopener noreferrer">src/types/types.ts</a>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This is my first time making types like this so keen for feedback or advice on how to improve it.</p></div>',6),r=[p];function i(n,c,d,h,l,m){return s(),t("div",null,r)}var y=e(a,[["render",i]]);export{u as __pageData,y as default};
